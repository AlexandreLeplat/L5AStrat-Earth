// <auto-generated />
using System;
using API.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace API.Migrations
{
    [DbContext(typeof(DAL))]
    [Migration("20200805075426_initial-create")]
    partial class initialcreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entities.Models.Campaign", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Assets")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CurrentTurn")
                        .HasColumnType("int");

                    b.Property<long>("GameId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NextPhase")
                        .HasColumnType("datetime2");

                    b.Property<int>("PhaseLength")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("Campaigns");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Assets = "{\"Classement\":{\"1er\":\"Doji Misao\",\"2ème\":\"Kitsuki Hisao\",\"3ème\":\"Yogo Rushi\",\"4ème\":\"Ikoma Kiyoshi\"},\"Prochain classement\":{\"\":\"Tour 6\"}}",
                            CurrentTurn = 3,
                            GameId = 1L,
                            Name = "La bataille des Quatre Vents",
                            NextPhase = new DateTime(2020, 8, 6, 9, 54, 26, 298, DateTimeKind.Local).AddTicks(4866),
                            PhaseLength = 24
                        });
                });

            modelBuilder.Entity("Entities.Models.Game", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Widgets")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "L5A Strat - TERRE",
                            Widgets = "[\"Clock\",\"PlayerInfo\",\"CampaignInfo\"]"
                        });
                });

            modelBuilder.Entity("Entities.Models.Player", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Assets")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CampaignId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsCurrentPlayer")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.HasIndex("UserId");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CampaignId = 1L,
                            IsCurrentPlayer = true,
                            Name = "Admin",
                            UserId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Assets = "{\"Caractéristiques\":{\"Gloire\":\"5\",\"Infamie\":\"1\"},\"Ressources\":{\"Stratégie\":\"3\",\"Influence\":\"0\"}}",
                            CampaignId = 1L,
                            IsCurrentPlayer = true,
                            Name = "Kitsuki Hisao",
                            UserId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            Assets = "{\"Caractéristiques\":{\"Gloire\":\"5\",\"Infamie\":\"1\"},\"Ressources\":{\"Stratégie\":\"3\",\"Influence\":\"0\"}}",
                            CampaignId = 1L,
                            IsCurrentPlayer = true,
                            Name = "Doji Misao",
                            UserId = 3L
                        },
                        new
                        {
                            Id = 4L,
                            Assets = "{\"Caractéristiques\":{\"Gloire\":\"5\",\"Infamie\":\"1\"},\"Ressources\":{\"Stratégie\":\"3\",\"Influence\":\"0\"}}",
                            CampaignId = 1L,
                            IsCurrentPlayer = true,
                            Name = "Ikoma Kiyoshi",
                            UserId = 4L
                        },
                        new
                        {
                            Id = 5L,
                            Assets = "{\"Caractéristiques\":{\"Gloire\":\"5\",\"Infamie\":\"1\"},\"Ressources\":{\"Stratégie\":\"3\",\"Influence\":\"0\"}}",
                            CampaignId = 1L,
                            IsCurrentPlayer = true,
                            Name = "Yogo Rushi",
                            UserId = 5L
                        });
                });

            modelBuilder.Entity("Entities.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Admin",
                            Password = "$2a$11$0cCo4Ciq8/0QZszDtAkP.eK969i/yEeK0bLIU3Tr8Zrut/BxkT5wS",
                            Role = 1
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Dragon",
                            Password = "$2a$11$1lokWFVxSB.CnBrMpKlFNOnKJm5w04ZCgEX4SBRyz83OYXU7XOqla",
                            Role = 0
                        },
                        new
                        {
                            Id = 3L,
                            Name = "Grue",
                            Password = "$2a$11$A8cdb6KPnCYxTdEz42jzZ.UOCNlF/9jMg/KuVf6Dm0DdoFUU2N1Bu",
                            Role = 0
                        },
                        new
                        {
                            Id = 4L,
                            Name = "Lion",
                            Password = "$2a$11$i3YhcWnD0DFn9mq/geDUD.XBqvWGqb1kn/7nJtPxFeX3vfxc3w8Ie",
                            Role = 0
                        },
                        new
                        {
                            Id = 5L,
                            Name = "Scorpion",
                            Password = "$2a$11$.B24rVXy6wHIdKC1uF49dOzem5wFa4nFbD3PumlzAaXDnmhP67T6O",
                            Role = 0
                        });
                });

            modelBuilder.Entity("Entities.Models.Campaign", b =>
                {
                    b.HasOne("Entities.Models.Game", "Game")
                        .WithMany("Campaigns")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Entities.Models.Player", b =>
                {
                    b.HasOne("Entities.Models.Campaign", "Campaign")
                        .WithMany("Players")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Models.User", "User")
                        .WithMany("Players")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
